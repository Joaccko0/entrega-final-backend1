<h1 class="mb-4">üè∑Ô∏è Cat√°logo de Productos</h1>
<div class="row mb-3">
  <div class="col-md-4">
    <form method="get" class="input-group">
      <input type="text" name="query" class="form-control" placeholder="Filtrar por categor√≠a..." value="{{query}}">
      <select name="sort" class="form-select">
        <option value="">Ordenar por precio</option>
        <option value="asc" {{#if (eq sort "asc")}}selected{{/if}}>Ascendente</option>
        <option value="desc" {{#if (eq sort "desc")}}selected{{/if}}>Descendente</option>
      </select>
      <button class="btn btn-outline-secondary" type="submit">Buscar</button>
    </form>
  </div>
</div>
<div class="row row-cols-1 row-cols-md-3 g-4">
  {{#each products}}
    <div class="col">
      <div class="card h-100 shadow-sm">
        <div class="card-body">
          <h5 class="card-title">{{this.title}}</h5>
          <p class="card-text">{{this.description}}</p>
          <ul class="list-group list-group-flush">
            <li class="list-group-item"><strong>Precio:</strong> ${{this.price}}</li>
            <li class="list-group-item"><strong>Stock:</strong> {{this.stock}}</li>
            <li class="list-group-item"><strong>Categor√≠a:</strong> {{this.category}}</li>
          </ul>
          <a href="/products/{{this._id}}" class="btn btn-outline-primary mt-2">Ver detalles</a>
          <button class="btn btn-success mt-2 add-to-cart" data-id="{{this._id}}">Agregar al carrito</button>
        </div>
      </div>
    </div>
  {{/each}}
</div>

<nav aria-label="Page navigation">
  <ul class="pagination justify-content-center mt-4">
    {{#if hasPrevPage}}
      <li class="page-item">
        <a class="page-link" href="{{prevLink}}">Anterior</a>
      </li>
    {{/if}}
    <li class="page-item active">
      <span class="page-link">{{page}}</span>
    </li>
    {{#if hasNextPage}}
      <li class="page-item">
        <a class="page-link" href="{{nextLink}}">Siguiente</a>
      </li>
    {{/if}}
  </ul>
</nav>

<script>
  // Guard√° un carrito "temporal" en localStorage (por ejemplo, para el usuario visitante)
  let cartId = localStorage.getItem("cartId");

  async function ensureCart() {
    if (!cartId) {
      // Pedimos al backend que nos cree un carrito vac√≠o
      const res = await fetch("/api/carts", { method: "POST" });
      const data = await res.json();
      cartId = data.payload._id;
      localStorage.setItem("cartId", cartId);
    }
    return cartId;
  }

  // Evento click para agregar al carrito
  document.addEventListener("click", async (e) => {
    if (e.target.classList.contains("add-to-cart")) {
      const pid = e.target.dataset.id;
      const cid = await ensureCart();
      const res = await fetch(`/api/carts/${cid}/product/${pid}`, { method: "POST", headers: { "Content-Type": "application/json" } });
      if (res.ok) {
        alert("Producto agregado al carrito!");
      } else {
        alert("Hubo un error al agregar.");
      }
    }
  });
</script>